	.text
	.globl	__mx_initialize_globalVar
__mx_initialize_globalVar:
	addi	sp, sp, -12
	sw  	ra, 8(sp)
	sw  	s0, 4(sp)
	addi	s0, sp, 12
	li  	t0, 4
	li  	t1, 4
	mul 	t0, t0, t1
	addi	a0, t0, 4
	call	__malloc
	li  	t0, 4
	sw  	t0, 0(a0)
	li  	t0, 4
	add 	t0, t0, a0
	la  	t1, a
	sw  	t0, 0(t1)
	lw  	s0, 4(sp)
	lw  	ra, 8(sp)
	addi	sp, sp, 12
	ret
	.globl	main
main:
	addi	sp, sp, -12
	sw  	ra, 8(sp)
	sw  	s0, 4(sp)
	addi	s0, sp, 12
	call	__mx_initialize_globalVar
	li  	t1, 4
	li  	t0, 4
	mul 	t0, t1, t0
	addi	a0, t0, 4
	call	__malloc
	li  	t0, 4
	sw  	t0, 0(a0)
	li  	t0, 4
	add 	s1, t0, a0
	li  	t0, 0
	add 	t0, t0, s1
	la  	t1, a
	lw  	t1, 0(t1)
	sw  	t1, 0(t0)
	li  	t0, 4
	add 	t0, t0, s1
	la  	t1, a
	lw  	t1, 0(t1)
	sw  	t1, 0(t0)
	li  	t0, 8
	add 	t0, t0, s1
	la  	t1, a
	lw  	t1, 0(t1)
	sw  	t1, 0(t0)
	li  	t0, 12
	add 	t0, t0, s1
	la  	t1, a
	lw  	t1, 0(t1)
	sw  	t1, 0(t0)
	mv  	t0, s1
	li  	t1, -4
	add 	t0, t1, t0
	lw  	a0, 0(t0)
	call	toString
	call	println
	li  	s0, 0
	j    	main_for.begin1
main_for.begin1:
	li  	t0, 0
	add 	t0, t0, s1
	lw  	t0, 0(t0)
	li  	t1, -4
	add 	t0, t1, t0
	lw  	t0, 0(t0)
	slt 	t0, s0, t0
	bnez	t0, main_for.body1
	j    	main_for.end1
main_for.body1:
	li  	t0, 0
	add 	t0, t0, s1
	lw  	t1, 0(t0)
	li  	t0, 4
	mul 	t0, s0, t0
	add 	s2, t0, t1
	call	getInt
	sw  	a0, 0(s2)
	addi	s0, s0, 1
	j    	main_for.begin1
main_for.end1:
	li  	s0, 0
	j    	main_for.begin2
main_for.begin2:
	li  	t0, 4
	add 	t0, t0, s1
	lw  	t0, 0(t0)
	li  	t1, -4
	add 	t0, t1, t0
	lw  	t0, 0(t0)
	slt 	t0, s0, t0
	bnez	t0, main_for.body2
	j    	main_for.end2
main_for.body2:
	li  	t0, 4
	add 	t0, t0, s1
	lw  	t1, 0(t0)
	li  	t0, 4
	mul 	t0, s0, t0
	add 	t0, t0, t1
	lw  	a0, 0(t0)
	call	toString
	call	print
	addi	s0, s0, 1
	j    	main_for.begin2
main_for.end2:
	la  	a0, .str
	call	println
	li  	s0, 0
	j    	main_for.begin3
main_for.begin3:
	li  	t0, 8
	add 	t0, t0, s1
	lw  	t0, 0(t0)
	li  	t1, -4
	add 	t0, t1, t0
	lw  	t0, 0(t0)
	slt 	t0, s0, t0
	bnez	t0, main_for.body3
	j    	main_for.end3
main_for.body3:
	li  	t0, 8
	add 	t0, t0, s1
	lw  	t1, 0(t0)
	li  	t0, 4
	mul 	t0, s0, t0
	add 	t1, t0, t1
	li  	t0, 0
	sw  	t0, 0(t1)
	addi	s0, s0, 1
	j    	main_for.begin3
main_for.end3:
	li  	s0, 0
	j    	main_for.begin4
main_for.begin4:
	li  	t0, 12
	add 	t0, t0, s1
	lw  	t0, 0(t0)
	li  	t1, -4
	add 	t0, t1, t0
	lw  	t0, 0(t0)
	slt 	t0, s0, t0
	bnez	t0, main_for.body4
	j    	main_for.end4
main_for.body4:
	li  	t0, 12
	add 	t0, t0, s1
	lw  	t0, 0(t0)
	li  	t1, 4
	mul 	t1, s0, t1
	add 	t0, t1, t0
	lw  	a0, 0(t0)
	call	toString
	call	print
	addi	s0, s0, 1
	j    	main_for.begin4
main_for.end4:
	li  	a0, 0
	j    	main_return
main_return:
	lw  	s0, 4(sp)
	lw  	ra, 8(sp)
	addi	sp, sp, 12
	ret
	.section	.data
	.globl	a
a:
	.word	0
	.section	.rodata
	.globl	.str
.str:
	.asciz	""
